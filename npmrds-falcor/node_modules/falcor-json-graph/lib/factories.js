//      
"use strict";
             
                       
                         
                 
                
                    
               
            
       
                   
          
           
           

                                    
           
                           
                           

                      
               
                           
                          

function atom(value, props) {
  const result =
    typeof value === "undefined"
      ? { $type: "atom" }
      : { $type: "atom", value: value };
  return props ? Object.assign({}, props, result) : result;
}

function undefinedAtom()                         {
  return { $type: "atom" };
}

module.exports = {
  ref: function ref(path      , props                    )               {
    const result = { $type: "ref", value: path };
    return props ? Object.assign({}, props, result) : result;
  },
  atom: atom,
  undefinedAtom: undefinedAtom,
  error: function error(
    errorValue        ,
    props                    
  )                 {
    const result = { $type: "error", value: errorValue };
    return props ? Object.assign({}, props, result) : result;
  },
  pathValue: function pathValue(
    path         ,
    value               
  )            {
    return { path: path, value: value };
  },
  pathInvalidation: function pathInvalidation(path         )                   {
    return { path: path, invalidated: true };
  }
};
